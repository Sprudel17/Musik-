<!DOCTYPE html>
<html lang="de">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>NexusBeatX – Web & App</title>
  <script src="https://www.gstatic.com/firebasejs/10.12.0/firebase-app.js"></script>
  <script src="https://www.gstatic.com/firebasejs/10.12.0/firebase-auth.js"></script>
  <script src="https://www.gstatic.com/firebasejs/10.12.0/firebase-firestore.js"></script>
  <script src="https://www.gstatic.com/firebasejs/10.12.0/firebase-storage.js"></script>
  <style>
    * { box-sizing: border-box; }
    body {
      margin: 0;
      font-family: 'Segoe UI', sans-serif;
      background: linear-gradient(to bottom right, #20004d, #2e1aa0);
      color: white;
    }
    nav {
      display: flex;
      flex-direction: column;
      align-items: center;
      background-color: rgba(0, 0, 0, 0.4);
      padding: 10px 20px;
      position: fixed;
      width: 100%;
      z-index: 10;
    }
    nav div.logo { font-weight: bold; font-size: 1.2em; }
    nav div.links { margin-top: 5px; display: flex; flex-wrap: wrap; justify-content: center; }
    nav a {
      color: white;
      margin: 5px 10px;
      text-decoration: none;
      cursor: pointer;
    }
    .section { padding: 100px 20px 40px; }
    .hidden { display: none; }
    h1, h2 { text-align: center; }
    .upload-form {
      max-width: 400px;
      margin: auto;
      background: rgba(255,255,255,0.1);
      padding: 20px;
      border-radius: 20px;
    }
    .upload-form input, .upload-form button {
      display: block;
      width: 100%;
      margin: 10px 0;
      padding: 10px;
      border-radius: 8px;
      border: none;
    }
    .upload-form .progress-bar {
      width: 0%;
      height: 10px;
      background: limegreen;
      border-radius: 10px;
      transition: width 0.5s ease;
    }
    .card-container {
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      gap: 20px;
      padding: 20px;
    }
    .card {
      width: 200px;
      background: rgba(255,255,255,0.1);
      padding: 10px;
      border-radius: 15px;
      text-align: center;
    }
    .card img {
      width: 100%;
      border-radius: 10px;
    }
    .card audio {
      width: 100%;
      margin-top: 10px;
    }
    .footer-links {
      position: fixed;
      bottom: 10px;
      left: 10px;
      font-size: 0.85em;
      z-index: 1000;
    }
    .footer-links a {
      color: white;
      margin-right: 12px;
      text-decoration: underline;
    }
    #authPopup {
      display: none;
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background: #111;
      color: white;
      padding: 20px;
      border-radius: 15px;
      box-shadow: 0 0 25px lime;
      max-width: 400px;
      width: 90%;
      font-family: 'Segoe UI', sans-serif;
    }
    #authPopup h3 {
      text-align: center;
      font-size: 1.3em;
      margin-bottom: 15px;
    }
    #authPopup input {
      width: 100%;
      padding: 12px;
      margin: 6px 0;
      background: #1a1a1a;
      border: 1px solid lime;
      border-radius: 8px;
      color: white;
    }
    #authPopup button {
      width: 100%;
      padding: 12px;
      margin-top: 10px;
      font-weight: bold;
      background: lime;
      color: black;
      border: none;
      border-radius: 8px;
      cursor: pointer;
      font-size: 1em;
    }
    #authPopup button:hover {
      background: #bfff00;
    }
  </style>
</head>
<body>
  <nav>
    <div class="logo">NexusBeatX</div>
    <div class="links">
      <a onclick="showSection('home')">Home</a>
      <a onclick="showSection('upload')">Hochladen</a>
      <a onclick="showSection('channel')">Mein Kanal</a>
      <a onclick="document.getElementById('authPopup').style.display='block'">Login</a>
    </div>
  </nav>

  <div id="home" class="section">
    <h1>KI-Musikplattform – Web & App</h1>
    <p style="text-align:center;">Deine KI-Sounds, immer dabei.</p>
    <div class="card-container" id="songList"></div>
  </div>

  <div id="upload" class="section hidden">
    <h2>Musik hochladen</h2>
    <div class="upload-form">
      <input type="file" id="thumb" accept="image/*">
      <input type="file" id="audio" accept="audio/*">
      <input type="text" id="artist" placeholder="Name *">
      <input type="text" id="title" placeholder="Titel *">
      <div class="progress-bar" id="progressBar"></div>
      <button onclick="uploadSong()">Hochladen</button>
    </div>
  </div>

  <div id="channel" class="section hidden">
    <h2>Mein Kanal</h2>
    <div class="card-container" id="channelSongs"></div>
  </div>

  <div class="footer-links">
    <a href="/impressum.html">Impressum</a>
    <a href="/datenschutz.html">Datenschutz</a>
    <a href="/agb.html">AGB</a>
  </div>

  <div id="authPopup">
    <h3>Login / Registrierung</h3>
    <input id="authEmail" placeholder="E-Mail">
    <input id="authPass" placeholder="Passwort" type="password">
    <button onclick="login(authEmail.value, authPass.value)">Login</button>
    <button onclick="register(authEmail.value, authPass.value)">Registrieren</button>
    <button onclick="this.parentElement.style.display='none'">Schließen</button>
  </div>

  <script>
    const firebaseConfig = {
      apiKey: "DEIN_API_KEY",
      authDomain: "DEIN_DOMAIN.firebaseapp.com",
      projectId: "DEIN_PROJECT_ID",
      storageBucket: "DEIN_BUCKET.appspot.com",
      messagingSenderId: "",
      appId: ""
    };

    firebase.initializeApp(firebaseConfig);
    const auth = firebase.auth();
    const db = firebase.firestore();
    const storage = firebase.storage();

    function showSection(id) {
      document.querySelectorAll('.section').forEach(s => s.classList.add('hidden'));
      document.getElementById(id).classList.remove('hidden');
    }

    async function login(email, passwort) {
      try {
        await auth.signInWithEmailAndPassword(email, passwort);
        alert("Erfolgreich eingeloggt!");
      } catch (err) {
        alert("Fehler: " + err.message);
      }
    }

    async function register(email, passwort) {
      try {
        await auth.createUserWithEmailAndPassword(email, passwort);
        alert("Erfolgreich registriert!");
      } catch (err) {
        alert("Fehler: " + err.message);
      }
    }

    async function uploadSong() {
      const user = auth.currentUser;
      if (!user) return alert("Bitte zuerst einloggen!");

      const file = document.getElementById("audio").files[0];
      const thumb = document.getElementById("thumb").files[0];
      const title = document.getElementById("title").value;
      const artist = document.getElementById("artist").value;

      const audioRef = storage.ref(`songs/${user.uid}/${Date.now()}_${file.name}`);
      const thumbRef = storage.ref(`thumbs/${user.uid}/${Date.now()}_${thumb.name}`);

      const uploadTask = audioRef.put(file);
      uploadTask.on('state_changed', (snapshot) => {
        const percent = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;
        document.getElementById("progressBar").style.width = percent + "%";
      });

      await uploadTask;
      await thumbRef.put(thumb);

      const audioURL = await audioRef.getDownloadURL();
      const thumbURL = await thumbRef.getDownloadURL();

      await db.collection("songs").add({
        uid: user.uid,
        title,
        artist,
        audioURL,
        thumbURL,
        createdAt: firebase.firestore.FieldValue.serverTimestamp()
      });

      alert("Song hochgeladen!");
      loadSongs();
      loadChannel();
    }

    function renderCard(container, doc) {
      const data = doc.data();
      const div = document.createElement("div");
      div.className = "card";
      div.innerHTML = `
        <img src="${data.thumbURL}" alt="Thumbnail">
        <h3>${data.title}</h3>
        <p>${data.artist}</p>
        <audio controls src="${data.audioURL}"></audio>
      `;
      container.appendChild(div);
    }

    function loadSongs() {
      const container = document.getElementById("songList");
      container.innerHTML = "";
      db.collection("songs").orderBy("createdAt", "desc").get().then(snapshot => {
        snapshot.forEach(doc => renderCard(container, doc));
      });
    }

    function loadChannel() {
      const user = auth.currentUser;
      if (!user) return;
      const container = document.getElementById("channelSongs");
      container.innerHTML = "";
      db.collection("songs").where("uid", "==", user.uid).orderBy("createdAt", "desc").get().then(snapshot => {
        snapshot.forEach(doc => renderCard(container, doc));
      });
    }

    auth.onAuthStateChanged(user => {
      if (user) {
        loadSongs();
        loadChannel();
      } else {
        loadSongs();
      }
    });
  </script>
</body>
</html>
